$date
  Tue Jun 20 21:25:15 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module barrel_shifter_arit_tb $end
$var reg 8 ! d_tb[7:0] $end
$var reg 8 " q_tb[7:0] $end
$var reg 3 # sel_tb[2:0] $end
$scope module dut $end
$var reg 8 $ d[7:0] $end
$var reg 3 % sel[2:0] $end
$var reg 8 & q[7:0] $end
$comment qshift is not handled $end
$scope module bsarit(0) $end
$scope module wider(0) $end
$scope module bshift $end
$scope module mux_ports_1 $end
$var reg 1 ' a_in $end
$var reg 1 ( b_in $end
$var reg 1 ) sel $end
$var reg 1 * sal_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module wider(1) $end
$scope module bshift $end
$scope module mux_ports_1 $end
$var reg 1 + a_in $end
$var reg 1 , b_in $end
$var reg 1 - sel $end
$var reg 1 . sal_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module wider(2) $end
$scope module bshift $end
$scope module mux_ports_1 $end
$var reg 1 / a_in $end
$var reg 1 0 b_in $end
$var reg 1 1 sel $end
$var reg 1 2 sal_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module wider(3) $end
$scope module bshift $end
$scope module mux_ports_1 $end
$var reg 1 3 a_in $end
$var reg 1 4 b_in $end
$var reg 1 5 sel $end
$var reg 1 6 sal_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module wider(4) $end
$scope module bshift $end
$scope module mux_ports_1 $end
$var reg 1 7 a_in $end
$var reg 1 8 b_in $end
$var reg 1 9 sel $end
$var reg 1 : sal_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module wider(5) $end
$scope module bshift $end
$scope module mux_ports_1 $end
$var reg 1 ; a_in $end
$var reg 1 < b_in $end
$var reg 1 = sel $end
$var reg 1 > sal_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module wider(6) $end
$scope module ext_sign $end
$scope module mux_ports $end
$var reg 1 ? a_in $end
$var reg 1 @ b_in $end
$var reg 1 A sel $end
$var reg 1 B sal_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module wider(7) $end
$scope module ext_sign $end
$scope module mux_ports $end
$var reg 1 C a_in $end
$var reg 1 D b_in $end
$var reg 1 E sel $end
$var reg 1 F sal_out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module bsarit(1) $end
$scope module wider(0) $end
$scope module bshift $end
$scope module mux_ports_1 $end
$var reg 1 G a_in $end
$var reg 1 H b_in $end
$var reg 1 I sel $end
$var reg 1 J sal_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module wider(1) $end
$scope module bshift $end
$scope module mux_ports_1 $end
$var reg 1 K a_in $end
$var reg 1 L b_in $end
$var reg 1 M sel $end
$var reg 1 N sal_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module wider(2) $end
$scope module bshift $end
$scope module mux_ports_1 $end
$var reg 1 O a_in $end
$var reg 1 P b_in $end
$var reg 1 Q sel $end
$var reg 1 R sal_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module wider(3) $end
$scope module bshift $end
$scope module mux_ports_1 $end
$var reg 1 S a_in $end
$var reg 1 T b_in $end
$var reg 1 U sel $end
$var reg 1 V sal_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module wider(4) $end
$scope module bshift $end
$scope module mux_ports_1 $end
$var reg 1 W a_in $end
$var reg 1 X b_in $end
$var reg 1 Y sel $end
$var reg 1 Z sal_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module wider(5) $end
$scope module ext_sign $end
$scope module mux_ports $end
$var reg 1 [ a_in $end
$var reg 1 \ b_in $end
$var reg 1 ] sel $end
$var reg 1 ^ sal_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module wider(6) $end
$scope module ext_sign $end
$scope module mux_ports $end
$var reg 1 _ a_in $end
$var reg 1 ` b_in $end
$var reg 1 a sel $end
$var reg 1 b sal_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module wider(7) $end
$scope module ext_sign $end
$scope module mux_ports $end
$var reg 1 c a_in $end
$var reg 1 d b_in $end
$var reg 1 e sel $end
$var reg 1 f sal_out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module bsarit(2) $end
$scope module wider(0) $end
$scope module bshift $end
$scope module mux_ports_1 $end
$var reg 1 g a_in $end
$var reg 1 h b_in $end
$var reg 1 i sel $end
$var reg 1 j sal_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module wider(1) $end
$scope module bshift $end
$scope module mux_ports_1 $end
$var reg 1 k a_in $end
$var reg 1 l b_in $end
$var reg 1 m sel $end
$var reg 1 n sal_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module wider(2) $end
$scope module bshift $end
$scope module mux_ports_1 $end
$var reg 1 o a_in $end
$var reg 1 p b_in $end
$var reg 1 q sel $end
$var reg 1 r sal_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module wider(3) $end
$scope module ext_sign $end
$scope module mux_ports $end
$var reg 1 s a_in $end
$var reg 1 t b_in $end
$var reg 1 u sel $end
$var reg 1 v sal_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module wider(4) $end
$scope module ext_sign $end
$scope module mux_ports $end
$var reg 1 w a_in $end
$var reg 1 x b_in $end
$var reg 1 y sel $end
$var reg 1 z sal_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module wider(5) $end
$scope module ext_sign $end
$scope module mux_ports $end
$var reg 1 { a_in $end
$var reg 1 | b_in $end
$var reg 1 } sel $end
$var reg 1 !" sal_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module wider(6) $end
$scope module ext_sign $end
$scope module mux_ports $end
$var reg 1 "" a_in $end
$var reg 1 #" b_in $end
$var reg 1 $" sel $end
$var reg 1 %" sal_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module wider(7) $end
$scope module ext_sign $end
$scope module mux_ports $end
$var reg 1 &" a_in $end
$var reg 1 '" b_in $end
$var reg 1 (" sel $end
$var reg 1 )" sal_out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b11010000 !
b11010000 "
b000 #
b11010000 $
b000 %
b11010000 &
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
14
05
06
17
08
09
1:
0;
1<
0=
0>
1?
1@
0A
1B
1C
1D
0E
1F
0G
0H
0I
0J
0K
0L
0M
0N
0O
1P
0Q
0R
0S
0T
0U
0V
1W
1X
0Y
1Z
0[
1\
0]
0^
1_
1`
0a
1b
1c
1d
0e
1f
0g
1h
0i
0j
0k
0l
0m
0n
0o
1p
0q
0r
0s
1t
0u
0v
1w
1x
0y
1z
0{
1|
0}
0!"
1""
1#"
0$"
1%"
1&"
1'"
0("
1)"
#100000000
b11101000 "
b001 #
b001 %
b11101000 &
1)
1-
11
15
16
19
0:
1=
1>
1A
1E
1L
0P
1S
1T
1V
0W
0Z
1[
1^
0h
1l
1s
1v
0w
0z
1{
1!"
#200000000
b11110100 "
b010 #
b010 %
b11110100 &
0)
0-
01
05
06
09
1:
0=
0>
0A
0E
1I
0L
1M
0N
1P
1Q
1R
0S
0T
1U
0V
1W
1Y
1Z
0[
1]
1a
1e
1h
0k
0n
1o
1r
0s
0v
1w
1z
#300000000
b11111010 "
b011 #
b011 %
b11111010 &
1)
1-
11
15
16
19
0:
1=
1>
1A
1E
1L
1N
0P
0R
1S
1T
1V
0W
1[
1k
1n
0o
0r
1s
1v
#400000000
b11111110 "
b101 #
b101 %
b11111110 &
0I
0M
0N
0Q
0U
0Y
0Z
0]
0a
0e
0h
1i
0j
0k
1m
1q
1r
1u
0w
1y
1}
1$"
1("
#800000000
b11010000 "
b000 #
b000 %
b11010000 &
0)
0-
01
05
06
09
1:
0=
0>
0A
0E
0L
1P
0S
0T
0V
1W
1Z
0[
0^
1h
0i
0l
0m
0n
0q
0r
0s
0u
0v
1w
0y
1z
0{
0}
0!"
0$"
0("
